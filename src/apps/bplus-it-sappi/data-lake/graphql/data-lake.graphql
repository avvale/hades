

type BplusItSappiDataLake
{
    id: ID!
    tenantId: ID!
    tenantCode: GraphQLString!
    data: JSON!
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
    
}

input BplusItSappiCreateDataLakeInput
{
    id: ID!
    tenantId: ID!
    tenantCode: GraphQLString!
    data: JSON!
    
}

input BplusItSappiUpdateDataLakeInput
{
    id: ID!
    tenantId: ID
    tenantCode: GraphQLString
    data: JSON
    
}

type Query 
{
    bplusItSappiFindDataLake(query:[QueryStatementInput]): BplusItSappiDataLake
    bplusItSappiFindDataLakeById(id:ID): BplusItSappiDataLake
    bplusItSappiGetDataLakes(query:[QueryStatementInput]): [BplusItSappiDataLake]!
    bplusItSappiPaginateDataLakes(query:[QueryStatementInput] constraint:[QueryStatementInput]): Pagination!
}

type Mutation
{
    bplusItSappiCreateDataLake(payload: BplusItSappiCreateDataLakeInput!): BplusItSappiDataLake
    bplusItSappiCreateDataLakes(payload: [BplusItSappiCreateDataLakeInput]!): Boolean!
    bplusItSappiUpdateDataLake(payload: BplusItSappiUpdateDataLakeInput!): BplusItSappiDataLake
    bplusItSappiDeleteDataLakeById(id: ID!): BplusItSappiDataLake
    bplusItSappiDeleteDataLakes(query:[QueryStatementInput]): [BplusItSappiDataLake]!
}
