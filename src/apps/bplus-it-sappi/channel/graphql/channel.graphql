
enum BplusItSappiChannelDirection {
    SENDER
    RECEIVER
        
}
enum BplusItSappiChannelAdapterStatus {
    ACTIVE
    INACTIVE
        
}

type BplusItSappiChannel
{
    id: ID!
    tenantId: ID!
    systemId: ID!
    party: GraphQLString
    component: GraphQLString!
    name: GraphQLString!
    flowParty: GraphQLString!
    flowComponent: GraphQLString!
    flowInterfaceName: GraphQLString!
    flowInterfaceNamespace: GraphQLString!
    adapterType: GraphQLString
    direction: BplusItSappiChannelDirection!
    transportProtocol: GraphQLString
    messageProtocol: GraphQLString
    adapterEngineName: GraphQLString
    url: GraphQLString
    username: GraphQLString
    remoteHost: GraphQLString
    remotePort: GraphQLInt
    directory: GraphQLString
    fileSchema: GraphQLString
    proxyHost: GraphQLString
    proxyPort: GraphQLInt
    destination: GraphQLString
    adapterStatus: BplusItSappiChannelAdapterStatus!
    softwareComponentName: GraphQLString
    responsibleUserAccountName: GraphQLString
    lastChangeUserAccount: GraphQLString
    lastChangedAt: GraphQLTimestamp
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
    
}

input BplusItSappiCreateChannelInput
{
    id: ID!
    tenantId: ID!
    systemId: ID!
    party: GraphQLString
    component: GraphQLString!
    name: GraphQLString!
    flowParty: GraphQLString!
    flowComponent: GraphQLString!
    flowInterfaceName: GraphQLString!
    flowInterfaceNamespace: GraphQLString!
    adapterType: GraphQLString
    direction: BplusItSappiChannelDirection!
    transportProtocol: GraphQLString
    messageProtocol: GraphQLString
    adapterEngineName: GraphQLString
    url: GraphQLString
    username: GraphQLString
    remoteHost: GraphQLString
    remotePort: GraphQLInt
    directory: GraphQLString
    fileSchema: GraphQLString
    proxyHost: GraphQLString
    proxyPort: GraphQLInt
    destination: GraphQLString
    adapterStatus: BplusItSappiChannelAdapterStatus!
    softwareComponentName: GraphQLString
    responsibleUserAccountName: GraphQLString
    lastChangeUserAccount: GraphQLString
    lastChangedAt: GraphQLTimestamp
    
}

input BplusItSappiUpdateChannelInput
{
    id: ID!
    tenantId: ID
    systemId: ID
    party: GraphQLString
    component: GraphQLString
    name: GraphQLString
    flowParty: GraphQLString
    flowComponent: GraphQLString
    flowInterfaceName: GraphQLString
    flowInterfaceNamespace: GraphQLString
    adapterType: GraphQLString
    direction: BplusItSappiChannelDirection
    transportProtocol: GraphQLString
    messageProtocol: GraphQLString
    adapterEngineName: GraphQLString
    url: GraphQLString
    username: GraphQLString
    remoteHost: GraphQLString
    remotePort: GraphQLInt
    directory: GraphQLString
    fileSchema: GraphQLString
    proxyHost: GraphQLString
    proxyPort: GraphQLInt
    destination: GraphQLString
    adapterStatus: BplusItSappiChannelAdapterStatus
    softwareComponentName: GraphQLString
    responsibleUserAccountName: GraphQLString
    lastChangeUserAccount: GraphQLString
    lastChangedAt: GraphQLTimestamp
    
}

type Query 
{
    bplusItSappiFindChannel(query:[QueryStatementInput]): BplusItSappiChannel
    bplusItSappiFindChannelById(id:ID): BplusItSappiChannel
    bplusItSappiGetChannels(query:[QueryStatementInput]): [BplusItSappiChannel]!
    bplusItSappiPaginateChannels(query:[QueryStatementInput] constraint:[QueryStatementInput]): Pagination!
}

type Mutation
{
    bplusItSappiCreateChannel(payload: BplusItSappiCreateChannelInput!): BplusItSappiChannel
    bplusItSappiCreateChannels(payload: [BplusItSappiCreateChannelInput]!): Boolean!
    bplusItSappiUpdateChannel(payload: BplusItSappiUpdateChannelInput!): BplusItSappiChannel
    bplusItSappiDeleteChannelById(id: ID!): BplusItSappiChannel
    bplusItSappiDeleteChannels(query:[QueryStatementInput]): [BplusItSappiChannel]!
}
