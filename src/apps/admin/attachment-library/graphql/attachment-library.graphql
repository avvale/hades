
type AdminAttachmentLibrary
{
    id: ID!
    name: GraphQLString
    pathname: GraphQLString!
    filename: GraphQLString!
    url: GraphQLString!
    mime: GraphQLString!
    extension: GraphQLString
    size: GraphQLInt!
    width: GraphQLInt
    height: GraphQLInt
    data: JSON
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input AdminCreateAttachmentLibraryInput
{
    id: ID!
    name: GraphQLString
    pathname: GraphQLString!
    filename: GraphQLString!
    url: GraphQLString!
    mime: GraphQLString!
    extension: GraphQLString
    size: GraphQLInt!
    width: GraphQLInt
    height: GraphQLInt
    data: JSON
}

input AdminUpdateAttachmentLibraryInput
{
    id: ID!
    name: GraphQLString
    pathname: GraphQLString
    filename: GraphQLString
    url: GraphQLString
    mime: GraphQLString
    extension: GraphQLString
    size: GraphQLInt
    width: GraphQLInt
    height: GraphQLInt
    data: JSON
}

type Query
{
    adminFindAttachmentLibrary(query:QueryStatement constraint:QueryStatement): AdminAttachmentLibrary
    adminFindAttachmentLibraryById(id:ID constraint:QueryStatement): AdminAttachmentLibrary
    adminGetAttachmentLibraries(query:QueryStatement constraint:QueryStatement): [AdminAttachmentLibrary]!
    adminPaginateAttachmentLibraries(query:QueryStatement constraint:QueryStatement): Pagination!
}

type Mutation
{
    adminCreateAttachmentLibrary(payload: AdminCreateAttachmentLibraryInput!): AdminAttachmentLibrary
    adminCreateAttachmentLibraries(payload: [AdminCreateAttachmentLibraryInput]!): Boolean!
    adminUpdateAttachmentLibrary(payload: AdminUpdateAttachmentLibraryInput! constraint:QueryStatement): AdminAttachmentLibrary
    adminDeleteAttachmentLibraryById(id: ID! constraint:QueryStatement): AdminAttachmentLibrary
    adminDeleteAttachmentLibraries(query:QueryStatement constraint:QueryStatement): [AdminAttachmentLibrary]!
}