
enum CciChannelDetailExecutionType {
    SUMMARY
    DETAIL
        
}
enum CciChannelDetailStatus {
    ERROR
    INACTIVE
    SUCCESSFUL
    STOPPED
    UNKNOWN
    UNREGISTERED
        
}

type CciChannelDetail
{
    id: ID!
    tenant: AdminTenant!
    tenantCode: GraphQLString!
    system: CciSystem!
    systemName: GraphQLString!
    execution: CciExecution!
    executionType: CciChannelDetailExecutionType!
    executionExecutedAt: GraphQLTimestamp!
    executionMonitoringStartAt: GraphQLTimestamp!
    executionMonitoringEndAt: GraphQLTimestamp!
    status: CciChannelDetailStatus!
    channelHash: GraphQLString!
    channelSapId: GraphQLString!
    channelParty: GraphQLString
    channelComponent: GraphQLString!
    channelName: GraphQLString!
    detail: GraphQLString
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
    
}

input CciCreateChannelDetailInput
{
    id: ID!
    tenantId: ID!
    tenantCode: GraphQLString!
    systemId: ID!
    systemName: GraphQLString!
    executionId: ID!
    executionType: CciChannelDetailExecutionType!
    executionExecutedAt: GraphQLTimestamp!
    executionMonitoringStartAt: GraphQLTimestamp!
    executionMonitoringEndAt: GraphQLTimestamp!
    status: CciChannelDetailStatus!
    channelHash: GraphQLString!
    channelSapId: GraphQLString!
    channelParty: GraphQLString
    channelComponent: GraphQLString!
    channelName: GraphQLString!
    detail: GraphQLString
    
}

input CciUpdateChannelDetailInput
{
    id: ID!
    tenantId: ID
    tenantCode: GraphQLString
    systemId: ID
    systemName: GraphQLString
    executionId: ID
    executionType: CciChannelDetailExecutionType
    executionExecutedAt: GraphQLTimestamp
    executionMonitoringStartAt: GraphQLTimestamp
    executionMonitoringEndAt: GraphQLTimestamp
    status: CciChannelDetailStatus
    channelHash: GraphQLString
    channelSapId: GraphQLString
    channelParty: GraphQLString
    channelComponent: GraphQLString
    channelName: GraphQLString
    detail: GraphQLString
    
}

type Query 
{
    cciFindChannelDetail(query:QueryStatement): CciChannelDetail
    cciFindChannelDetailById(id:ID): CciChannelDetail
    cciGetChannelsDetail(query:QueryStatement): [CciChannelDetail]!
    cciPaginateChannelsDetail(query:QueryStatement constraint:QueryStatement): Pagination!
}

type Mutation
{
    cciCreateChannelDetail(payload: CciCreateChannelDetailInput!): CciChannelDetail
    cciCreateChannelsDetail(payload: [CciCreateChannelDetailInput]!): Boolean!
    cciUpdateChannelDetail(payload: CciUpdateChannelDetailInput!): CciChannelDetail
    cciDeleteChannelDetailById(id: ID!): CciChannelDetail
    cciDeleteChannelsDetail(query:QueryStatement): [CciChannelDetail]!
}
