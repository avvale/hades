enum CciSystemTechnology {
    WSO2
    SAPPI
    B2B
    MULESOFT
    SAPSCI
}

type CciSystem
{
    id: ID!
    tenantId: ID!
    tenant: IamTenant!
    tenantCode: GraphQLString!
    version: GraphQLString!
    name: GraphQLString!
    environment: GraphQLString!
    technology: CciSystemTechnology!
    isActive: GraphQLBoolean!
    cancelledAt: GraphQLTimestamp
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input CciCreateSystemInput
{
    id: ID!
    tenantId: ID!
    tenantCode: GraphQLString!
    version: GraphQLString!
    name: GraphQLString!
    environment: GraphQLString!
    technology: CciSystemTechnology!
    isActive: GraphQLBoolean!
    cancelledAt: GraphQLTimestamp
}

input CciUpdateSystemInput
{
    id: ID!
    tenantId: ID
    tenantCode: GraphQLString
    version: GraphQLString
    name: GraphQLString
    environment: GraphQLString
    technology: CciSystemTechnology
    isActive: GraphQLBoolean
    cancelledAt: GraphQLTimestamp
}

type Query
{
    cciFindSystem(query:QueryStatement constraint:QueryStatement): CciSystem
    cciFindSystemById(id:ID constraint:QueryStatement): CciSystem
    cciGetSystems(query:QueryStatement constraint:QueryStatement): [CciSystem]!
    cciPaginateSystems(query:QueryStatement constraint:QueryStatement): Pagination!
}

type Mutation
{
    cciCreateSystem(payload: CciCreateSystemInput!): CciSystem
    cciCreateSystems(payload: [CciCreateSystemInput]!): Boolean!
    cciUpdateSystem(payload: CciUpdateSystemInput! constraint:QueryStatement): CciSystem
    cciDeleteSystemById(id: ID! constraint:QueryStatement): CciSystem
    cciDeleteSystems(query:QueryStatement constraint:QueryStatement): [CciSystem]!
}