
type CciModule
{
    id: ID!
    tenantId: ID!
    tenant: IamTenant!
    tenantCode: GraphQLString!
    systemId: ID!
    system: CciSystem!
    systemName: GraphQLString!
    channelHash: GraphQLString!
    channelParty: GraphQLString
    channelComponent: GraphQLString!
    channelName: GraphQLString!
    flowHash: GraphQLString
    flowParty: GraphQLString
    flowReceiverParty: GraphQLString
    flowComponent: GraphQLString
    flowReceiverComponent: GraphQLString
    flowInterfaceName: GraphQLString
    flowInterfaceNamespace: GraphQLString
    version: GraphQLString!
    parameterGroup: GraphQLString
    name: GraphQLString
    parameterName: GraphQLString
    parameterValue: GraphQLString
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input CciCreateModuleInput
{
    id: ID!
    tenantId: ID!
    tenantCode: GraphQLString!
    systemId: ID!
    systemName: GraphQLString!
    channelHash: GraphQLString!
    channelParty: GraphQLString
    channelComponent: GraphQLString!
    channelName: GraphQLString!
    flowHash: GraphQLString
    flowParty: GraphQLString
    flowReceiverParty: GraphQLString
    flowComponent: GraphQLString
    flowReceiverComponent: GraphQLString
    flowInterfaceName: GraphQLString
    flowInterfaceNamespace: GraphQLString
    version: GraphQLString!
    parameterGroup: GraphQLString
    name: GraphQLString
    parameterName: GraphQLString
    parameterValue: GraphQLString
}

input CciUpdateModuleInput
{
    id: ID!
    tenantId: ID
    tenantCode: GraphQLString
    systemId: ID
    systemName: GraphQLString
    channelHash: GraphQLString
    channelParty: GraphQLString
    channelComponent: GraphQLString
    channelName: GraphQLString
    flowHash: GraphQLString
    flowParty: GraphQLString
    flowReceiverParty: GraphQLString
    flowComponent: GraphQLString
    flowReceiverComponent: GraphQLString
    flowInterfaceName: GraphQLString
    flowInterfaceNamespace: GraphQLString
    version: GraphQLString
    parameterGroup: GraphQLString
    name: GraphQLString
    parameterName: GraphQLString
    parameterValue: GraphQLString
}

type Query
{
    cciFindModule(query:QueryStatement constraint:QueryStatement): CciModule
    cciFindModuleById(id:ID constraint:QueryStatement): CciModule
    cciGetModules(query:QueryStatement constraint:QueryStatement): [CciModule]!
    cciPaginateModules(query:QueryStatement constraint:QueryStatement): Pagination!
}

type Mutation
{
    cciCreateModule(payload: CciCreateModuleInput!): CciModule
    cciCreateModules(payload: [CciCreateModuleInput]!): Boolean!
    cciUpdateModule(payload: CciUpdateModuleInput! constraint:QueryStatement): CciModule
    cciDeleteModuleById(id: ID! constraint:QueryStatement): CciModule
    cciDeleteModules(query:QueryStatement constraint:QueryStatement): [CciModule]!
}
