enum CciJobDetailExecutionType {
    SUMMARY
    DETAIL
}
enum CciJobDetailStatus {
    CANCELLED
    COMPLETED
    ERROR
}

type CciJobDetail
{
    id: ID!
    tenantId: ID!
    tenant: IamTenant!
    tenantCode: GraphQLString!
    systemId: ID!
    system: CciSystem!
    systemName: GraphQLString!
    executionId: ID!
    execution: CciExecution!
    executionType: CciJobDetailExecutionType!
    executionExecutedAt: GraphQLTimestamp!
    executionMonitoringStartAt: GraphQLTimestamp!
    executionMonitoringEndAt: GraphQLTimestamp!
    status: CciJobDetailStatus!
    name: GraphQLString
    returnCode: GraphQLInt
    node: GraphQLString
    user: GraphQLString
    startAt: GraphQLTimestamp!
    endAt: GraphQLTimestamp!
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
}

input CciCreateJobDetailInput
{
    id: ID!
    tenantId: ID!
    tenantCode: GraphQLString!
    systemId: ID!
    systemName: GraphQLString!
    executionId: ID!
    executionType: CciJobDetailExecutionType!
    executionExecutedAt: GraphQLTimestamp!
    executionMonitoringStartAt: GraphQLTimestamp!
    executionMonitoringEndAt: GraphQLTimestamp!
    status: CciJobDetailStatus!
    name: GraphQLString
    returnCode: GraphQLInt
    node: GraphQLString
    user: GraphQLString
    startAt: GraphQLTimestamp!
    endAt: GraphQLTimestamp!
}

input CciUpdateJobDetailInput
{
    id: ID!
    tenantId: ID
    tenantCode: GraphQLString
    systemId: ID
    systemName: GraphQLString
    executionId: ID
    executionType: CciJobDetailExecutionType
    executionExecutedAt: GraphQLTimestamp
    executionMonitoringStartAt: GraphQLTimestamp
    executionMonitoringEndAt: GraphQLTimestamp
    status: CciJobDetailStatus
    name: GraphQLString
    returnCode: GraphQLInt
    node: GraphQLString
    user: GraphQLString
    startAt: GraphQLTimestamp
    endAt: GraphQLTimestamp
}

type Query
{
    cciFindJobDetail(query: QueryStatement constraint: QueryStatement): CciJobDetail
    cciFindJobDetailById(id: ID constraint: QueryStatement): CciJobDetail
    cciGetJobsDetail(query: QueryStatement constraint: QueryStatement): [CciJobDetail]!
    cciPaginateJobsDetail(query: QueryStatement constraint: QueryStatement): Pagination!
}

type Mutation
{
    cciCreateJobDetail(payload: CciCreateJobDetailInput!): CciJobDetail
    cciCreateJobsDetail(payload: [CciCreateJobDetailInput]!): Boolean!
    cciUpdateJobDetail(payload: CciUpdateJobDetailInput! constraint: QueryStatement): CciJobDetail
    cciDeleteJobDetailById(id: ID! constraint: QueryStatement): CciJobDetail
    cciDeleteJobsDetail(query: QueryStatement constraint: QueryStatement): [CciJobDetail]!
}