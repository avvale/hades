

type OAuthApplication
{
    id: ID!
    name: GraphQLString!
    code: GraphQLString!
    secret: GraphQLString!
    isMaster: GraphQLBoolean!
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
    
}

input OAuthCreateApplicationInput
{
    id: ID!
    name: GraphQLString!
    code: GraphQLString!
    secret: GraphQLString!
    isMaster: GraphQLBoolean!
    
}

input OAuthUpdateApplicationInput
{
    id: ID!
    name: GraphQLString
    code: GraphQLString
    secret: GraphQLString
    isMaster: GraphQLBoolean
    
}

type Query 
{
    oAuthFindApplication(query:[QueryStatementInput]): OAuthApplication
    oAuthFindApplicationById(id:ID): OAuthApplication
    oAuthGetApplications(query:[QueryStatementInput]): [OAuthApplication]!
    oAuthPaginateApplications(query:[QueryStatementInput] constraint:[QueryStatementInput]): Pagination!
}

type Mutation
{
    oAuthCreateApplication(payload: OAuthCreateApplicationInput!): OAuthApplication
    oAuthCreateApplications(payload: [OAuthCreateApplicationInput]!): Boolean!
    oAuthUpdateApplication(payload: OAuthUpdateApplicationInput!): OAuthApplication
    oAuthDeleteApplicationById(id: ID!): OAuthApplication
    oAuthDeleteApplications(query:[QueryStatementInput]): [OAuthApplication]!
}
