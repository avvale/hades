

type OAuthRefreshToken
{
    id: ID!
    accessTokenId: ID!
    token: GraphQLString!
    isRevoked: GraphQLBoolean!
    expiresAt: GraphQLInt
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
    
}

input OAuthCreateRefreshTokenInput
{
    id: ID!
    accessTokenId: ID!
    token: GraphQLString!
    isRevoked: GraphQLBoolean!
    expiresAt: GraphQLInt
    
}

input OAuthUpdateRefreshTokenInput
{
    id: ID!
    accessTokenId: ID
    token: GraphQLString
    isRevoked: GraphQLBoolean
    expiresAt: GraphQLInt
    
}

type Query 
{
    oAuthFindRefreshToken(query:QueryStatement): OAuthRefreshToken
    oAuthFindRefreshTokenById(id:ID): OAuthRefreshToken
    oAuthGetRefreshTokens(query:QueryStatement): [OAuthRefreshToken]!
    oAuthPaginateRefreshTokens(query:QueryStatement constraint:QueryStatement): Pagination!
}

type Mutation
{
    oAuthCreateRefreshToken(payload: OAuthCreateRefreshTokenInput!): OAuthRefreshToken
    oAuthCreateRefreshTokens(payload: [OAuthCreateRefreshTokenInput]!): Boolean!
    oAuthUpdateRefreshToken(payload: OAuthUpdateRefreshTokenInput!): OAuthRefreshToken
    oAuthDeleteRefreshTokenById(id: ID!): OAuthRefreshToken
    oAuthDeleteRefreshTokens(query:QueryStatement): [OAuthRefreshToken]!
}
