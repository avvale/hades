

type OAuthAccessToken
{
    id: ID!
    client: OAuthClient!
    token: GraphQLString!
    name: GraphQLString
    isRevoked: GraphQLBoolean!
    expiresAt: GraphQLTimestamp
    createdAt: GraphQLTimestamp
    updatedAt: GraphQLTimestamp
    deletedAt: GraphQLTimestamp
    
}

input OAuthCreateAccessTokenInput
{
    id: ID!
    clientId: ID!
    token: GraphQLString!
    name: GraphQLString
    isRevoked: GraphQLBoolean!
    expiresAt: GraphQLTimestamp
    
}

input OAuthUpdateAccessTokenInput
{
    id: ID!
    clientId: ID
    token: GraphQLString
    name: GraphQLString
    isRevoked: GraphQLBoolean
    expiresAt: GraphQLTimestamp
    
}

type Query 
{
    oAuthFindAccessToken(query:QueryStatement): OAuthAccessToken
    oAuthFindAccessTokenById(id:ID): OAuthAccessToken
    oAuthGetAccessTokens(query:QueryStatement): [OAuthAccessToken]!
    oAuthPaginateAccessTokens(query:QueryStatement constraint:QueryStatement): Pagination!
}

type Mutation
{
    oAuthCreateAccessToken(payload: OAuthCreateAccessTokenInput!): OAuthAccessToken
    oAuthCreateAccessTokens(payload: [OAuthCreateAccessTokenInput]!): Boolean!
    oAuthUpdateAccessToken(payload: OAuthUpdateAccessTokenInput!): OAuthAccessToken
    oAuthDeleteAccessTokenById(id: ID!): OAuthAccessToken
    oAuthDeleteAccessTokens(query:QueryStatement): [OAuthAccessToken]!
}
